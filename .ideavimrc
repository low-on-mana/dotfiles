let mapleader=","

" inoremap <leader><leader> <Esc>
vnoremap <leader><leader> <Esc>
" inoremap <leader>w <Esc>:w<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>o o<Esc>
nnoremap <leader>O O<Esc>
nnoremap <leader>q ZQ
" nnoremap <Leader>r :%s/\<<C-r><C-w>\>/
" nnoremap <leader>qa :qa<CR>
" nnoremap <leader>wq ZZ
" inoremap <leader>wq <Esc>ZZ
" nnoremap <leader>= gg=G :%s/,\(\S\)/, \1/g<CR>
" inoremap <leader>1 <Esc>1gt
" inoremap <leader>2 <Esc>2gt
" inoremap <leader>3 <Esc>3gt
" inoremap <leader>4 <Esc>4gt
" inoremap <leader>5 <Esc>5gt
" inoremap <leader>6 <Esc>6gt
" inoremap <leader>7 <Esc>7gt
" inoremap <leader>8 <Esc>8gt
" inoremap <leader>9 <Esc>9gt
" inoremap <leader>] <Esc>gt
" inoremap <leader>[ <Esc>gT
nnoremap <leader>1 1gt
nnoremap <leader>2 2gt
nnoremap <leader>3 3gt
nnoremap <leader>4 4gt
nnoremap <leader>5 5gt
nnoremap <leader>6 6gt
nnoremap <leader>7 7gt
nnoremap <leader>8 8gt
nnoremap <leader>9 9gt
nnoremap ] gt
nnoremap [ gT
" nnoremap <leader>] gt
" nnoremap <leader>[ gT
nnoremap <leader>; <C-W>w
nnoremap <Leader>* :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

"Run nearest test
nnoremap <leader>s :action RunClass<CR>
" nnoremap <leader>s :action :cursive.testing.actions/run-single-test<CR>
" nnoremap <leader>t :action :cursive.testing.actions/run-ns-tests<CR>

" Evaluate sexp like in vim-fireplace
nnoremap cpp :action :cursive.repl.actions/run-top-sexp<CR>

nnoremap <Space> :action HideAllWindows<CR>

"debug nearest test
nnoremap <leader>d :action DebugClass<CR>
" Search Everywhere
nnoremap <C-p> :action GotoFile<CR>
" ToggleLineBreakpoint
nnoremap <leader>b :action ToggleLineBreakpoint<CR>
" ReRun
nnoremap <leader>r :action Rerun<CR>
nnoremap <Leader>e ^ilet(:<Esc>ea)<Esc>wxxi{ <Esc>$a }<Esc><CR>

nnoremap Q i<CR><Esc>k$
set clipboard+=unnamed
set surround
set ignorecase
set smartcase